"use strict";var _assert=require("assert");var _assert2=_interopRequireDefault(_assert);var _logger=require("../../common/logger");var _logger2=_interopRequireDefault(_logger);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var assertSnapshot=function assertSnapshot(snapper,testName){var diffCount;return regeneratorRuntime.async(function assertSnapshot$(_context){while(1){switch(_context.prev=_context.next){case 0:_logger2.default.verbose("snapshotTest","checking if image "+testName+" exists");if(!snapper.exists(testName)){_context.next=13;break;}_logger2.default.verbose("snapshotTest","awaiting new snapshot for test: "+testName);_context.next=5;return regeneratorRuntime.awrap(snapper.snap(testName));case 5:_logger2.default.verbose("snapshotTest","snapshot for test: "+testName+" taken");_context.next=8;return regeneratorRuntime.awrap(snapper.diff(testName));case 8:diffCount=_context.sent;_logger2.default.verbose("snapshotTest","image dif count is: "+diffCount);if(diffCount===0){(0,_assert2.default)(true,testName);}else{_assert2.default.equal(0,diffCount,"A mismatch has been detected between the baseline and new snapshot. Please review the new snapshot");}_context.next=16;break;case 13:_context.next=15;return regeneratorRuntime.awrap(snapper.snap(testName));case 15:(0,_assert2.default)(false,"A new snapshot has been created. Please review it");case 16:case"end":return _context.stop();}}},null,undefined);};module.exports={assertSnapshot:assertSnapshot};