"use strict";var _callsite=require("callsite");var _callsite2=_interopRequireDefault(_callsite);var _path=require("path");var _path2=_interopRequireDefault(_path);var _logger=require("../../common/logger");var _logger2=_interopRequireDefault(_logger);var _snapshots=require("../../snapshots");var _snapshots2=_interopRequireDefault(_snapshots);var _snapshotTest=require("./snapshotTest");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}describe("snapshotAssert",function(){var snapper=void 0;var fakeDiff=function fakeDiff(){snapper.diff=function _callee(bool){return regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt("return",new Promise(function(resolve){resolve(bool.includes("true")?0:1);}));case 1:case"end":return _context.stop();}}},null,undefined);};};var fakeFileExists=function fakeFileExists(){snapper.exists=function _callee2(){return regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt("return",new Promise(function(resolve){resolve();}));case 1:case"end":return _context2.stop();}}},null,undefined);};};beforeEach(function(){var snapsPath=__dirname+"/__snapshots__";var platform="ios";snapper=new _snapshots2.default(platform,snapsPath);snapper.snap=function _callee3(){return regeneratorRuntime.async(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:return _context3.abrupt("return",new Promise(function(resolve){resolve();}));case 1:case"end":return _context3.stop();}}},null,undefined);};});it("does not throw assertion error if images match",function _callee4(){var testName;return regeneratorRuntime.async(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:fakeDiff();fakeFileExists();testName="resolve-true";_context4.next=5;return regeneratorRuntime.awrap((0,_snapshotTest.assertSnapshot)(snapper,testName));case 5:case"end":return _context4.stop();}}},null,undefined);});it("throws error if images do not match",function _callee5(){var testName;return regeneratorRuntime.async(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:fakeDiff();fakeFileExists();testName="resolve-false";expect.assertions(1);_context5.prev=4;_context5.next=7;return regeneratorRuntime.awrap((0,_snapshotTest.assertSnapshot)(snapper,testName));case 7:_context5.next=12;break;case 9:_context5.prev=9;_context5.t0=_context5["catch"](4);expect(_context5.t0.code).toEqual("ERR_ASSERTION");case 12:case"end":return _context5.stop();}}},null,undefined,[[4,9]]);});it("asks to review the new snapshot if one does not exist at file path",function _callee6(){var testName;return regeneratorRuntime.async(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:testName="fake";expect.assertions(1);_context6.prev=2;_context6.next=5;return regeneratorRuntime.awrap((0,_snapshotTest.assertSnapshot)(snapper,testName));case 5:_context6.next=11;break;case 7:_context6.prev=7;_context6.t0=_context6["catch"](2);console.warn("ADSADASDASDASD:",_context6.t0);expect(_context6.t0.code).toEqual("ERR_ASSERTION");case 11:case"end":return _context6.stop();}}},null,undefined,[[2,7]]);});it("takes a snapshot to compare against",function _callee7(){var testName;return regeneratorRuntime.async(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:snapper.snap=jest.fn();fakeDiff();fakeFileExists();testName="resolve-true";_context7.next=6;return regeneratorRuntime.awrap((0,_snapshotTest.assertSnapshot)(snapper,testName));case 6:expect(snapper.snap.mock.calls.length).toBe(1);case 7:case"end":return _context7.stop();}}},null,undefined);});});